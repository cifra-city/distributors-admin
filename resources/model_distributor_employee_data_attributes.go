/*
Title

Title

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DistributorEmployeeDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributorEmployeeDataAttributes{}

// DistributorEmployeeDataAttributes struct for DistributorEmployeeDataAttributes
type DistributorEmployeeDataAttributes struct {
	// User ID
	UserId string `json:"user_id"`
	// User role
	Role string `json:"role"`
	// Distributor ID
	DistributorId string `json:"distributor_id"`
	// Creation date
	CreatedAt time.Time `json:"created_at"`
}

type _DistributorEmployeeDataAttributes DistributorEmployeeDataAttributes

// NewDistributorEmployeeDataAttributes instantiates a new DistributorEmployeeDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributorEmployeeDataAttributes(userId string, role string, distributorId string, createdAt time.Time) *DistributorEmployeeDataAttributes {
	this := DistributorEmployeeDataAttributes{}
	this.UserId = userId
	this.Role = role
	this.DistributorId = distributorId
	this.CreatedAt = createdAt
	return &this
}

// NewDistributorEmployeeDataAttributesWithDefaults instantiates a new DistributorEmployeeDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributorEmployeeDataAttributesWithDefaults() *DistributorEmployeeDataAttributes {
	this := DistributorEmployeeDataAttributes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *DistributorEmployeeDataAttributes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *DistributorEmployeeDataAttributes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *DistributorEmployeeDataAttributes) SetUserId(v string) {
	o.UserId = v
}

// GetRole returns the Role field value
func (o *DistributorEmployeeDataAttributes) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *DistributorEmployeeDataAttributes) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *DistributorEmployeeDataAttributes) SetRole(v string) {
	o.Role = v
}

// GetDistributorId returns the DistributorId field value
func (o *DistributorEmployeeDataAttributes) GetDistributorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value
// and a boolean to check if the value has been set.
func (o *DistributorEmployeeDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DistributorId, true
}

// SetDistributorId sets field value
func (o *DistributorEmployeeDataAttributes) SetDistributorId(v string) {
	o.DistributorId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DistributorEmployeeDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DistributorEmployeeDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DistributorEmployeeDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o DistributorEmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributorEmployeeDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["role"] = o.Role
	toSerialize["distributor_id"] = o.DistributorId
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *DistributorEmployeeDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"role",
		"distributor_id",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDistributorEmployeeDataAttributes := _DistributorEmployeeDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDistributorEmployeeDataAttributes)

	if err != nil {
		return err
	}

	*o = DistributorEmployeeDataAttributes(varDistributorEmployeeDataAttributes)

	return err
}

type NullableDistributorEmployeeDataAttributes struct {
	value *DistributorEmployeeDataAttributes
	isSet bool
}

func (v NullableDistributorEmployeeDataAttributes) Get() *DistributorEmployeeDataAttributes {
	return v.value
}

func (v *NullableDistributorEmployeeDataAttributes) Set(val *DistributorEmployeeDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributorEmployeeDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributorEmployeeDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributorEmployeeDataAttributes(val *DistributorEmployeeDataAttributes) *NullableDistributorEmployeeDataAttributes {
	return &NullableDistributorEmployeeDataAttributes{value: val, isSet: true}
}

func (v NullableDistributorEmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributorEmployeeDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


