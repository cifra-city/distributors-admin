/*
Title

Title

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PlaceEmployeeDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaceEmployeeDataAttributes{}

// PlaceEmployeeDataAttributes struct for PlaceEmployeeDataAttributes
type PlaceEmployeeDataAttributes struct {
	// User ID
	UserId string `json:"user_id"`
	// Place ID
	PlaceId string `json:"place_id"`
	// Employee ID
	EmployeeId string `json:"employee_id"`
	// Username
	Username string `json:"username"`
	// User role
	Role string `json:"role"`
	// Creation date
	CreatedAt time.Time `json:"created_at"`
	// Update date
	UpdatedAt time.Time `json:"updated_at"`
}

type _PlaceEmployeeDataAttributes PlaceEmployeeDataAttributes

// NewPlaceEmployeeDataAttributes instantiates a new PlaceEmployeeDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceEmployeeDataAttributes(userId string, placeId string, employeeId string, username string, role string, createdAt time.Time, updatedAt time.Time) *PlaceEmployeeDataAttributes {
	this := PlaceEmployeeDataAttributes{}
	this.UserId = userId
	this.PlaceId = placeId
	this.EmployeeId = employeeId
	this.Username = username
	this.Role = role
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPlaceEmployeeDataAttributesWithDefaults instantiates a new PlaceEmployeeDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceEmployeeDataAttributesWithDefaults() *PlaceEmployeeDataAttributes {
	this := PlaceEmployeeDataAttributes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *PlaceEmployeeDataAttributes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PlaceEmployeeDataAttributes) SetUserId(v string) {
	o.UserId = v
}

// GetPlaceId returns the PlaceId field value
func (o *PlaceEmployeeDataAttributes) GetPlaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlaceId
}

// GetPlaceIdOk returns a tuple with the PlaceId field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetPlaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlaceId, true
}

// SetPlaceId sets field value
func (o *PlaceEmployeeDataAttributes) SetPlaceId(v string) {
	o.PlaceId = v
}

// GetEmployeeId returns the EmployeeId field value
func (o *PlaceEmployeeDataAttributes) GetEmployeeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmployeeId
}

// GetEmployeeIdOk returns a tuple with the EmployeeId field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetEmployeeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmployeeId, true
}

// SetEmployeeId sets field value
func (o *PlaceEmployeeDataAttributes) SetEmployeeId(v string) {
	o.EmployeeId = v
}

// GetUsername returns the Username field value
func (o *PlaceEmployeeDataAttributes) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *PlaceEmployeeDataAttributes) SetUsername(v string) {
	o.Username = v
}

// GetRole returns the Role field value
func (o *PlaceEmployeeDataAttributes) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *PlaceEmployeeDataAttributes) SetRole(v string) {
	o.Role = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PlaceEmployeeDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PlaceEmployeeDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PlaceEmployeeDataAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PlaceEmployeeDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PlaceEmployeeDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PlaceEmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaceEmployeeDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["place_id"] = o.PlaceId
	toSerialize["employee_id"] = o.EmployeeId
	toSerialize["username"] = o.Username
	toSerialize["role"] = o.Role
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PlaceEmployeeDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"place_id",
		"employee_id",
		"username",
		"role",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlaceEmployeeDataAttributes := _PlaceEmployeeDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlaceEmployeeDataAttributes)

	if err != nil {
		return err
	}

	*o = PlaceEmployeeDataAttributes(varPlaceEmployeeDataAttributes)

	return err
}

type NullablePlaceEmployeeDataAttributes struct {
	value *PlaceEmployeeDataAttributes
	isSet bool
}

func (v NullablePlaceEmployeeDataAttributes) Get() *PlaceEmployeeDataAttributes {
	return v.value
}

func (v *NullablePlaceEmployeeDataAttributes) Set(val *PlaceEmployeeDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceEmployeeDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceEmployeeDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceEmployeeDataAttributes(val *PlaceEmployeeDataAttributes) *NullablePlaceEmployeeDataAttributes {
	return &NullablePlaceEmployeeDataAttributes{value: val, isSet: true}
}

func (v NullablePlaceEmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceEmployeeDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


