/*
Title

Title

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the EmployeeDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmployeeDataAttributes{}

// EmployeeDataAttributes struct for EmployeeDataAttributes
type EmployeeDataAttributes struct {
	// User email
	Email *string `json:"email,omitempty"`
	// New user password
	Password *string `json:"password,omitempty"`
	// Distributor ID
	DistributorId string `json:"distributor_id"`
	// Creation date
	CreatedAt time.Time `json:"created_at"`
}

type _EmployeeDataAttributes EmployeeDataAttributes

// NewEmployeeDataAttributes instantiates a new EmployeeDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmployeeDataAttributes(distributorId string, createdAt time.Time) *EmployeeDataAttributes {
	this := EmployeeDataAttributes{}
	this.DistributorId = distributorId
	this.CreatedAt = createdAt
	return &this
}

// NewEmployeeDataAttributesWithDefaults instantiates a new EmployeeDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmployeeDataAttributesWithDefaults() *EmployeeDataAttributes {
	this := EmployeeDataAttributes{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *EmployeeDataAttributes) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeDataAttributes) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *EmployeeDataAttributes) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *EmployeeDataAttributes) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *EmployeeDataAttributes) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmployeeDataAttributes) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *EmployeeDataAttributes) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *EmployeeDataAttributes) SetPassword(v string) {
	o.Password = &v
}

// GetDistributorId returns the DistributorId field value
func (o *EmployeeDataAttributes) GetDistributorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value
// and a boolean to check if the value has been set.
func (o *EmployeeDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DistributorId, true
}

// SetDistributorId sets field value
func (o *EmployeeDataAttributes) SetDistributorId(v string) {
	o.DistributorId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EmployeeDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EmployeeDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EmployeeDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o EmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmployeeDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["distributor_id"] = o.DistributorId
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *EmployeeDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"distributor_id",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmployeeDataAttributes := _EmployeeDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmployeeDataAttributes)

	if err != nil {
		return err
	}

	*o = EmployeeDataAttributes(varEmployeeDataAttributes)

	return err
}

type NullableEmployeeDataAttributes struct {
	value *EmployeeDataAttributes
	isSet bool
}

func (v NullableEmployeeDataAttributes) Get() *EmployeeDataAttributes {
	return v.value
}

func (v *NullableEmployeeDataAttributes) Set(val *EmployeeDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableEmployeeDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableEmployeeDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmployeeDataAttributes(val *EmployeeDataAttributes) *NullableEmployeeDataAttributes {
	return &NullableEmployeeDataAttributes{value: val, isSet: true}
}

func (v NullableEmployeeDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmployeeDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


